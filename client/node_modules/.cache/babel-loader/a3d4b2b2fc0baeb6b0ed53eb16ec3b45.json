{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msi\\\\Desktop\\\\contactlist\\\\client\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport AddContact from \"./components/AddContact\";\nimport ContactCard from \"./components/ContactCard\";\nimport { getContacts, addContact, editContact } from \"./js/actions/actionsContact\";\n\nfunction App() {\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  });\n  const [isEdit, setisEdit] = useState(false);\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts);\n\n  const handelChange = e => {\n    setContact({ ...contact,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const reset = () => {\n    setContact({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      id: \"\"\n    });\n  };\n\n  const add = () => {\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  const editUser = () => {\n    dispatch(editContact(contact.id, contact));\n    reset();\n  };\n\n  const getPerson = person => {\n    setContact({\n      name: person.name,\n      email: person.email,\n      phone: person.phone,\n      id: person._id\n    });\n    setisEdit(true);\n  };\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, []);\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/Contact-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Contact List\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/Add-contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Add Contact\"))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/Contact-list\",\n    render: () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, contacts.map((el, i) => /*#__PURE__*/React.createElement(ContactCard, {\n      key: i,\n      contact: el,\n      getPerson: getPerson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/Add-contact\",\n    render: () => /*#__PURE__*/React.createElement(AddContact, {\n      handelChange: handelChange,\n      action: isEdit ? editUser : add,\n      contact: contact,\n      isEdit: isEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/msi/Desktop/contactlist/client/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Route","Link","useDispatch","useSelector","AddContact","ContactCard","getContacts","addContact","editContact","App","contact","setContact","name","email","phone","isEdit","setisEdit","dispatch","contacts","state","handelChange","e","target","value","reset","id","add","editUser","getPerson","person","_id","map","el","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport AddContact from \"./components/AddContact\";\nimport ContactCard from \"./components/ContactCard\";\nimport {\n  getContacts,\n  addContact,\n  editContact,\n} from \"./js/actions/actionsContact\";\n\nfunction App() {\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n  const [isEdit, setisEdit] = useState(false);\n\n  const dispatch = useDispatch();\n  const contacts = useSelector((state) => state.contacts);\n\n  const handelChange = (e) => {\n    setContact({ ...contact, [e.target.name]: e.target.value });\n  };\n\n  const reset = () => {\n    setContact({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      id: \"\",\n    });\n  };\n  const add = () => {\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  const editUser = () => {\n    dispatch(editContact(contact.id, contact));\n    reset();\n  };\n\n  const getPerson = (person) => {\n    setContact({\n      name: person.name,\n      email: person.email,\n      phone: person.phone,\n      id: person._id,\n    });\n    setisEdit(true);\n  };\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, []);\n  return (\n    <BrowserRouter>\n      <div>\n        <Link to=\"/Contact-list\">\n          <button className=\"button\">Contact List</button>\n        </Link>\n        <Link to=\"/Add-contact\">\n          <button className=\"button\">Add Contact</button>\n        </Link>\n      </div>\n      <Route\n        path=\"/Contact-list\"\n        render={() => (\n          <div className=\"contact-list\">\n            {contacts.map((el, i) => (\n              <ContactCard key={i} contact={el} getPerson={getPerson} />\n            ))}\n          </div>\n        )}\n      />\n      <Route\n        path=\"/Add-contact\"\n        render={() => (\n          <AddContact\n            handelChange={handelChange}\n            action={isEdit ? editUser : add}\n            contact={contact}\n            isEdit={isEdit}\n          />\n        )}\n      />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}